!function ($) { var a = function (b, c) { this.$element = $(b), this.options = $.extend({}, a.DEFAULTS, this.dataOptions(), c), this.init() }; a.DEFAULTS = { from: 0, to: 0, speed: 1e3, refreshInterval: 100, decimals: 0, formatter: function (a, b) { return a.toFixed(b.decimals) }, onUpdate: null, onComplete: null }, a.prototype.init = function () { this.value = this.options.from, this.loops = Math.ceil(this.options.speed / this.options.refreshInterval), this.loopCount = 0, this.increment = (this.options.to - this.options.from) / this.loops }, a.prototype.dataOptions = function () { var a = { from: this.$element.data("from"), to: this.$element.data("to"), speed: this.$element.data("speed"), refreshInterval: this.$element.data("refresh-interval"), decimals: this.$element.data("decimals") }, b = Object.keys(a); for (var d in b) { var c = b[d]; void 0 === a[c] && delete a[c] } return a }, a.prototype.update = function () { this.value += this.increment, this.loopCount++, this.render(), "function" == typeof this.options.onUpdate && this.options.onUpdate.call(this.$element, this.value), this.loopCount >= this.loops && (clearInterval(this.interval), this.value = this.options.to, "function" == typeof this.options.onComplete && this.options.onComplete.call(this.$element, this.value)) }, a.prototype.render = function () { var a = this.options.formatter.call(this.$element, this.value, this.options); this.$element.text(a) }, a.prototype.restart = function () { this.stop(), this.init(), this.start() }, a.prototype.start = function () { this.stop(), this.render(), this.interval = setInterval(this.update.bind(this), this.options.refreshInterval) }, a.prototype.stop = function () { this.interval && clearInterval(this.interval) }, a.prototype.toggle = function () { this.interval ? this.stop() : this.start() }, $.fn.countTo = function (b) { return this.each(function () { var d = $(this), c = d.data("countTo"); c && "object" != typeof b || (c && c.stop(), d.data("countTo", c = new a(this, "object" == typeof b ? b : {}))), c["string" == typeof b ? b : "start"].call(c) }) } }(jQuery)